{"version":3,"sources":["webpack:///./node_modules/markdown/lib/index.js","webpack:///src/components/backtotop.vue","webpack:///./src/components/backtotop.vue?7803","webpack:///./src/components/backtotop.vue","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///./node_modules/util/util.js","webpack:///./node_modules/process/browser.js","webpack:///src/components/reply.vue","webpack:///./src/components/reply.vue?a809","webpack:///./src/components/reply.vue","webpack:///src/views/topic.vue","webpack:///./src/views/topic.vue?1755","webpack:///./src/views/topic.vue","webpack:///./node_modules/util/support/isBufferBrowser.js","webpack:///./node_modules/markdown/lib/markdown.js"],"names":["exports","markdown","__webpack_require__","parse","toHTML","backtotop","replace","data","show","mounted","_this","this","jquery_default","window","on","scrollTop","beforeDestory","off","methods","goTop","components_backtotop","render","_h","$createElement","_self","_c","directives","name","rawName","value","expression","staticClass","click","_v","staticRenderFns","Component","normalizeComponent","ssrContext","__webpack_exports__","Object","create","module","ctor","superCtor","super_","prototype","constructor","enumerable","writable","configurable","TempCtor","global","process","formatRegExp","format","f","isString","objects","i","arguments","length","push","inspect","join","args","len","str","String","x","Number","JSON","stringify","_","isNull","isObject","deprecate","fn","msg","isUndefined","apply","noDeprecation","warned","throwDeprecation","Error","traceDeprecation","console","trace","error","debugEnviron","debugs","obj","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","isFunction","ret","primitive","simple","isNumber","formatPrimitive","keys","visibleKeys","array","hash","forEach","val","idx","arrayToHash","getOwnPropertyNames","isError","indexOf","formatError","isRegExp","RegExp","toString","call","isDate","Date","output","base","braces","isArray","toUTCString","l","hasOwnProperty","formatProperty","key","match","formatArray","map","pop","reduce","prev","cur","numLinesEst","reduceToSingleString","desc","getOwnPropertyDescriptor","get","set","split","line","substr","ar","Array","arg","re","objectToString","d","e","o","pad","n","debuglog","NODE_ENV","NODE_DEBUG","toUpperCase","test","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","undefined","null","string","date","regexp","isNullOrUndefined","isSymbol","isPrimitive","isBuffer","months","prop","log","time","getHours","getMinutes","getSeconds","getDate","getMonth","inherits","origin","add","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","env","argv","version","versions","addListener","once","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","reply_utils","default","reply","props","hasErr","content","author_txt","computed","extends_default","vuex_esm","userInfo","replyTo","addReply","linkUsers","htmlText","replyContent","append","outerHTML","postData","accesstoken","token","replyId","reply_id","a","ajax","type","url","topicId","dataType","success","res","topic","replies","id","author","loginname","avatar_url","ups","create_at","$emit","responseText","$alert","error_msg","components_reply","_vm","class","err","attrs","rows","placeholder","domProps","input","$event","target","composing","src_components_reply","showMenu","noData","curReplyId","filters","getLastTimeStr","isFromNow","utils","$route","params","getTabInfo","tab","good","top","isClass","ago","isUps","inArray","userId","$router","redirect","encodeURIComponent","path","hideItemReply","upReply","item","_this2","action","index","splice","components","nvHead","header","nvReply","nvTop","views_topic","page-type","show-menu","need-add","need-res","fix-head","textContent","_s","src","_f","visit_count","innerHTML","reply_count","_l","to","uped","topic-id","reply-id","reply-to","update:topic","update:show","close","_e","topic_Component","topic_normalizeComponent","copy","fill","readUInt8","expose","Markdown","dialect","dialects","Gruber","em_state","strong_state","debug_indent","mk_block_toSource","uneval","trailing","lineNumber","mk_block_inspect","util","source","toTree","options","toHTMLTree","renderJsonML","extract_attr","refs","references","html","convert_tree_to_html","tree","jsonml","slice","preprocessTreeNode","level","code","href","ref","original","merge_text_nodes","mk_block","block","trail","s","toSource","count_lines","strong_em","tag","md","state_slot","other_slot","CloseTag","len_after","text","orig_match","shift","other","state","unshift","processInline","last","split_blocks","startLine","m","blocks","line_no","exec","lastIndex","processBlock","next","cbs","ord","__order__","__call__","debug","inline","custom_root","old_tree","b","print","loop_re_over_block","cb","valueOf","atxHeader","setextHeader","block_search","substring","horizRule","lists","any_list","bullet_list","is_list_re","indent_re","li","loose","nl","add_to","what","get_contained_blocks","paragraphify","stack","list","last_li","sublist","make_list","lines","li_accumulate","line_re","wanted_depth","Math","floor","found","indent","contained","next_block","hr","blockquote","abutting","processedBlock","attr","isEmpty","referenceDefn","toLowerCase","para","__oneElement__","patterns_or_re","previous_nodes","__patterns__","patterns","out","]","}","__escape__","\\","charAt","![","alt","[","orig","DialectHelpers","inline_until_char","link","consumed","children","open_parens","<","`","  \n","buildBlockOrder","buildInlinePatterns","pattern","want","nodes","subclassDialect","Block","Inline","Maruku","processMetaHash","meta_string","meta","parts","in_quotes","letter","split_meta_hash","document_meta","pairs","p","block_meta","node","result","definition_list","tight","terms","defns","table","_split_on_unescaped","ch","r","html_attrs","align","trim","row","html_row","matches","before","k","arr","thisp","escapeHTML","render_tree","attributes","tag_attrs","root"],"mappings":"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","file":"static/js/2.9f1e9207bad748ec5b70.js","sourcesContent":["// super simple module for the most common nodejs use case.\nexports.markdown = require(\"./markdown\");\nexports.parse = exports.markdown.toHTML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/markdown/lib/index.js\n// module id = +sNg\n// module chunks = 2","<template>\n  <div class=\"iconfont icon-top\" v-show=\"show\" @click=\"goTop\">&#xe611;</div>\n</template>\n<script>\nimport $ from 'jquery';\nexport default {\n  replace: true,\n  data() {\n    return {\n      show: false\n    };\n  },\n  mounted() {\n    $(window).on('scroll', () => {\n      if ($(window).scrollTop() > 100) {\n        this.show = true;\n      } else {\n        this.show = false;\n      }\n    });\n  },\n  // 禁用scroll\n  beforeDestory() {\n    $(window).off('scroll');\n  },\n  methods: {\n    goTop() {\n      $(window).scrollTop(0);\n      this.show = false;\n    }\n  }\n};\n</script>\n<style>\n  .icon-top {\n    position: fixed;\n    right: 10px;\n    bottom: 80px;\n    font-size: 50px;\n    z-index: 9999;\n    color: #42b983;\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/backtotop.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show),expression:\"show\"}],staticClass:\"iconfont icon-top\",on:{\"click\":_vm.goTop}},[_vm._v(\"\")])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-5384535a\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/backtotop.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5384535a\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./backtotop.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./backtotop.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./backtotop.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5384535a\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./backtotop.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/backtotop.vue\n// module id = null\n// module chunks = ","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inherits/inherits_browser.js\n// module id = LC74\n// module chunks = 2","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/util/util.js\n// module id = OMJi\n// module chunks = 2","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = W2nU\n// module chunks = 1 2","<template>\n\n  <section class=\"reply\">\n        <textarea id=\"content\" rows=\"8\" class=\"text\"\n                  :class=\"{'err':hasErr}\"\n                  v-model=\"content\"\n                  placeholder='回复支持Markdown语法,请注意标记代码'>\n        </textarea>\n    <a class=\"button\" @click=\"addReply\">确定</a>\n  </section>\n\n</template>\n<script>\n  import $ from 'jquery';\n  const utils = require('../libs/utils').default;\n  const markdown = require('markdown').markdown.default;\n  import {\n    mapGetters\n  } from 'vuex';\n\n  export default {\n    replace: true,\n    props: ['topic', 'replyId', 'topicId', 'replyTo', 'show'],\n    data() {\n      return {\n        hasErr: false,\n        content: '',\n        author_txt: '<br/><br/><a class=\"form\" href=\"#\">a cnode project from north</a>'\n      };\n    },\n    computed: {\n      ...mapGetters({\n        userInfo: 'getUserInfo'\n      })\n    },\n    mounted() {\n      if (this.replyTo) {\n        this.content = `@${this.replyTo} `;\n      }\n    },\n    methods: {\n      addReply() {\n        if (!this.content) {\n          this.hasErr = true;\n        } else {\n          let time = new Date();\n          let linkUsers = utils.linkUsers(this.content);\n          let htmlText = markdown.toHTML(linkUsers) + this.author_txt;\n          let replyContent = $('<div class=\"markdown-text\"></div>').append(htmlText)[0].outerHTML;\n          let postData = {\n            accesstoken: this.userInfo.token,\n            content: this.content + this.author_txt\n          };\n\n          if (this.replyId) {\n            postData.reply_id = this.replyId;\n          }\n          $.ajax({\n            type: 'POST',\n            url: `https://cnodejs.org/api/v1/topic/${this.topicId}/replies`,\n            data: postData,\n            dataType: 'json',\n            success: (res) => {\n              if (res.success) {\n                this.topic.replies.push({\n                  id: res.reply_id,\n                  author: {\n                    loginname: this.userInfo.loginname,\n                    avatar_url: this.userInfo.avatar_url\n                  },\n                  content: replyContent,\n                  ups: [],\n                  create_at: time\n                });\n              }\n              this.content = '';\n              if (this.show) {\n                this.$emit('close');\n              }\n            },\n            error: (res) => {\n              var error = JSON.parse(res.responseText);\n              this.$alert(error.error_msg);\n              return false;\n            }\n          });\n        }\n      }\n    }\n  };\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/components/reply.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"reply\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.content),expression:\"content\"}],staticClass:\"text\",class:{'err':_vm.hasErr},attrs:{\"id\":\"content\",\"rows\":\"8\",\"placeholder\":\"回复支持Markdown语法,请注意标记代码\"},domProps:{\"value\":(_vm.content)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.content=$event.target.value}}}),_vm._v(\" \"),_c('a',{staticClass:\"button\",on:{\"click\":_vm.addReply}},[_vm._v(\"确定\")])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-61357d43\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/reply.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./reply.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./reply.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-61357d43\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./reply.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/reply.vue\n// module id = null\n// module chunks = ","<template>\n    <div>\n        <nv-head page-type=\"主题\"\n                :show-menu=\"showMenu\"\n                :need-add=\"false\"\n                 :need-res=\"true\"\n                :fix-head=\"true\">\n        </nv-head>\n\n        <div id=\"page\"\n                :class=\"{'show-menu':showMenu}\"\n                v-if=\"topic.title\">\n\n            <h2 class=\"topic-title\" v-text=\"topic.title\"></h2>\n            <section class=\"author-info\">\n                <img class=\"avatar\" :src=\"topic.author.avatar_url\" />\n                <div class=\"col\">\n                    <span>{{topic.author.loginname}}</span>\n                    <time>\n                        发布于:{{topic.create_at | getLastTimeStr(true)}}\n                    </time>\n                </div>\n                <div class=\"right\">\n                    <span class=\"tag\"\n                            :class=\"getTabInfo(topic.tab, topic.good, topic.top, true)\"\n                            v-text=\"getTabInfo(topic.tab, topic.good, topic.top, false)\">\n                    </span>\n                    <span class=\"name\">{{topic.visit_count}}次浏览</span>\n                </div>\n            </section>\n\n            <section class='markdown-body topic-content' v-html=\"topic.content\">\n\n            </section>\n\n            <h3 class=\"topic-reply\">\n                <strong>{{topic.reply_count}}</strong> 回复\n            </h3>\n\n            <section class=\"reply-list\">\n                <ul>\n                    <li v-for=\"item in topic.replies\">\n                        <section class=\"user\">\n                            <router-link :to=\"{name:'user',params:{loginname:item.author.loginname}}\" >\n                                <img class=\"head\" :src=\"item.author.avatar_url\"/>\n                            </router-link>\n                            <div class=\"info\">\n                                <span class=\"cl\">\n                                    <span class=\"name\" v-text=\"item.author.loginname\"></span>\n                                    <span class=\"name mt10\">\n                                        <span></span>\n                                        发布于:{{item.create_at | getLastTimeStr(true)}}</span>\n                                </span>\n                                <span class=\"cr\">\n                                    <span class=\"iconfont icon\"\n                                        :class=\"{'uped':isUps(item.ups)}\"\n                                        @click=\"upReply(item)\">&#xe608;</span>\n                                    {{item.ups.length}}\n                                    <span class=\"iconfont icon\" @click=\"addReply(item.id)\">&#xe609;</span>\n                                </span>\n                            </div>\n                        </section>\n                        <div class=\"reply_content\" v-html=\"item.content\"></div>\n                        <nv-reply :topic.sync=\"topic\"\n                                :topic-id=\"topicId\"\n                                :reply-id=\"item.id\"\n                                :reply-to=\"item.author.loginname\"\n                                :show.sync=\"curReplyId\"\n                                @close=\"hideItemReply\"\n                                v-if=\"userInfo.userId && curReplyId === item.id\"></nv-reply>\n                    </li>\n                </ul>\n            </section>\n            <nv-top></nv-top>\n            <nv-reply v-if=\"userInfo.userId\"\n                    :topic=\"topic\"\n                    :topic-id=\"topicId\">\n            </nv-reply>\n        </div>\n\n        <div class='no-data' v-if=\"noData\">\n            <i class=\"iconfont icon-empty\">&#xe60a;</i>\n            该话题不存在!\n        </div>\n    </div>\n</template>\n<script>\n    import $ from 'jquery';\n    import * as utils from '../libs/utils.js';\n    import nvHead from '../components/header.vue';\n    import nvReply from '../components/reply.vue';\n    import nvTop from '../components/backtotop.vue';\n    import {\n        mapGetters\n    } from 'vuex';\n\n    export default {\n        data() {\n            return {\n                showMenu: false, // 是否展开左侧菜单\n                topic: {}, // 主题\n                noData: false,\n                topicId: '',\n                curReplyId: ''\n            };\n        },\n      filters: {\n        getLastTimeStr(time, isFromNow) {\n          return utils.getLastTimeStr(time, isFromNow);\n        }\n      },\n        computed: {\n            ...mapGetters({\n                userInfo: 'getUserInfo'\n            })\n        },\n        mounted() {\n            // 隐藏左侧展开菜单\n            this.showMenu = false;\n\n            // 获取url传的tab参数\n            this.topicId = this.$route.params.id;\n\n            // 加载主题数据\n            $.get('https://cnodejs.org/api/v1/topic/' + this.topicId, (d) => {\n                if (d && d.data) {\n                    this.topic = d.data;\n                } else {\n                    this.noData = true;\n                }\n            });\n        },\n        methods: {\n            getTabInfo(tab, good = false, top, isClass) {\n                return utils.getTabInfo(tab, good, top, isClass);\n            },\n            getLastTimeStr(time, ago) {\n                return utils.getLastTimeStr(time, ago);\n            },\n            isUps(ups) {\n                return $.inArray(this.userInfo.userId, ups) >= 0;\n            },\n            addReply(id) {\n                this.curReplyId = id;\n                if (!this.userInfo.userId) {\n                    this.$router.push({\n                        name: 'login',\n                        params: {\n                            redirect: encodeURIComponent(this.$route.path)\n                        }\n                    });\n                }\n            },\n            hideItemReply() {\n                this.curReplyId = '';\n            },\n            upReply(item) {\n                if (!this.userInfo.userId) {\n                    this.$router.push({\n                        name: 'login',\n                        params: {\n                            redirect: encodeURIComponent(this.$route.path)\n                        }\n                    });\n                } else {\n                    $.ajax({\n                        type: 'POST',\n                        url: 'https://cnodejs.org/api/v1/reply/' + item.id + '/ups',\n                        data: {\n                            accesstoken: this.userInfo.token\n                        },\n                        dataType: 'json',\n                        success: (res) => {\n                            if (res.success) {\n                                if (res.action === 'down') {\n                                    let index = $.inArray(this.userInfo.userId, item.ups);\n                                    item.ups.splice(index, 1);\n                                } else {\n                                    item.ups.push(this.userInfo.userId);\n                                }\n                            }\n                        },\n                        error: (res) => {\n                            let error = JSON.parse(res.responseText);\n                            this.$alert(error.error_msg);\n                            return false;\n                        }\n                    });\n                }\n            }\n        },\n        components: {\n            nvHead,\n            nvReply,\n            nvTop\n        }\n    };\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/views/topic.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('nv-head',{attrs:{\"page-type\":\"主题\",\"show-menu\":_vm.showMenu,\"need-add\":false,\"need-res\":true,\"fix-head\":true}}),_vm._v(\" \"),(_vm.topic.title)?_c('div',{class:{'show-menu':_vm.showMenu},attrs:{\"id\":\"page\"}},[_c('h2',{staticClass:\"topic-title\",domProps:{\"textContent\":_vm._s(_vm.topic.title)}}),_vm._v(\" \"),_c('section',{staticClass:\"author-info\"},[_c('img',{staticClass:\"avatar\",attrs:{\"src\":_vm.topic.author.avatar_url}}),_vm._v(\" \"),_c('div',{staticClass:\"col\"},[_c('span',[_vm._v(_vm._s(_vm.topic.author.loginname))]),_vm._v(\" \"),_c('time',[_vm._v(\"\\n                    发布于:\"+_vm._s(_vm._f(\"getLastTimeStr\")(_vm.topic.create_at,true))+\"\\n                \")])]),_vm._v(\" \"),_c('div',{staticClass:\"right\"},[_c('span',{staticClass:\"tag\",class:_vm.getTabInfo(_vm.topic.tab, _vm.topic.good, _vm.topic.top, true),domProps:{\"textContent\":_vm._s(_vm.getTabInfo(_vm.topic.tab, _vm.topic.good, _vm.topic.top, false))}}),_vm._v(\" \"),_c('span',{staticClass:\"name\"},[_vm._v(_vm._s(_vm.topic.visit_count)+\"次浏览\")])])]),_vm._v(\" \"),_c('section',{staticClass:\"markdown-body topic-content\",domProps:{\"innerHTML\":_vm._s(_vm.topic.content)}}),_vm._v(\" \"),_c('h3',{staticClass:\"topic-reply\"},[_c('strong',[_vm._v(_vm._s(_vm.topic.reply_count))]),_vm._v(\" 回复\\n        \")]),_vm._v(\" \"),_c('section',{staticClass:\"reply-list\"},[_c('ul',_vm._l((_vm.topic.replies),function(item){return _c('li',[_c('section',{staticClass:\"user\"},[_c('router-link',{attrs:{\"to\":{name:'user',params:{loginname:item.author.loginname}}}},[_c('img',{staticClass:\"head\",attrs:{\"src\":item.author.avatar_url}})]),_vm._v(\" \"),_c('div',{staticClass:\"info\"},[_c('span',{staticClass:\"cl\"},[_c('span',{staticClass:\"name\",domProps:{\"textContent\":_vm._s(item.author.loginname)}}),_vm._v(\" \"),_c('span',{staticClass:\"name mt10\"},[_c('span'),_vm._v(\"\\n                                    发布于:\"+_vm._s(_vm._f(\"getLastTimeStr\")(item.create_at,true)))])]),_vm._v(\" \"),_c('span',{staticClass:\"cr\"},[_c('span',{staticClass:\"iconfont icon\",class:{'uped':_vm.isUps(item.ups)},on:{\"click\":function($event){_vm.upReply(item)}}},[_vm._v(\"\")]),_vm._v(\"\\n                                \"+_vm._s(item.ups.length)+\"\\n                                \"),_c('span',{staticClass:\"iconfont icon\",on:{\"click\":function($event){_vm.addReply(item.id)}}},[_vm._v(\"\")])])])],1),_vm._v(\" \"),_c('div',{staticClass:\"reply_content\",domProps:{\"innerHTML\":_vm._s(item.content)}}),_vm._v(\" \"),(_vm.userInfo.userId && _vm.curReplyId === item.id)?_c('nv-reply',{attrs:{\"topic\":_vm.topic,\"topic-id\":_vm.topicId,\"reply-id\":item.id,\"reply-to\":item.author.loginname,\"show\":_vm.curReplyId},on:{\"update:topic\":function($event){_vm.topic=$event},\"update:show\":function($event){_vm.curReplyId=$event},\"close\":_vm.hideItemReply}}):_vm._e()],1)}))]),_vm._v(\" \"),_c('nv-top'),_vm._v(\" \"),(_vm.userInfo.userId)?_c('nv-reply',{attrs:{\"topic\":_vm.topic,\"topic-id\":_vm.topicId}}):_vm._e()],1):_vm._e(),_vm._v(\" \"),(_vm.noData)?_c('div',{staticClass:\"no-data\"},[_c('i',{staticClass:\"iconfont icon-empty\"},[_vm._v(\"\")]),_vm._v(\"\\n        该话题不存在!\\n    \")]):_vm._e()],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-bbd4e974\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/topic.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./topic.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./topic.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-bbd4e974\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./topic.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/topic.vue\n// module id = null\n// module chunks = ","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/util/support/isBufferBrowser.js\n// module id = fC4T\n// module chunks = 2","// Released under MIT license\n// Copyright (c) 2009-2010 Dominic Baggott\n// Copyright (c) 2009-2010 Ash Berlin\n// Copyright (c) 2011 Christoph Dorn <christoph@christophdorn.com> (http://www.christophdorn.com)\n\n/*jshint browser:true, devel:true */\n\n(function( expose ) {\n\n/**\n *  class Markdown\n *\n *  Markdown processing in Javascript done right. We have very particular views\n *  on what constitutes 'right' which include:\n *\n *  - produces well-formed HTML (this means that em and strong nesting is\n *    important)\n *\n *  - has an intermediate representation to allow processing of parsed data (We\n *    in fact have two, both as [JsonML]: a markdown tree and an HTML tree).\n *\n *  - is easily extensible to add new dialects without having to rewrite the\n *    entire parsing mechanics\n *\n *  - has a good test suite\n *\n *  This implementation fulfills all of these (except that the test suite could\n *  do with expanding to automatically run all the fixtures from other Markdown\n *  implementations.)\n *\n *  ##### Intermediate Representation\n *\n *  *TODO* Talk about this :) Its JsonML, but document the node names we use.\n *\n *  [JsonML]: http://jsonml.org/ \"JSON Markup Language\"\n **/\nvar Markdown = expose.Markdown = function(dialect) {\n  switch (typeof dialect) {\n    case \"undefined\":\n      this.dialect = Markdown.dialects.Gruber;\n      break;\n    case \"object\":\n      this.dialect = dialect;\n      break;\n    default:\n      if ( dialect in Markdown.dialects ) {\n        this.dialect = Markdown.dialects[dialect];\n      }\n      else {\n        throw new Error(\"Unknown Markdown dialect '\" + String(dialect) + \"'\");\n      }\n      break;\n  }\n  this.em_state = [];\n  this.strong_state = [];\n  this.debug_indent = \"\";\n};\n\n/**\n *  parse( markdown, [dialect] ) -> JsonML\n *  - markdown (String): markdown string to parse\n *  - dialect (String | Dialect): the dialect to use, defaults to gruber\n *\n *  Parse `markdown` and return a markdown document as a Markdown.JsonML tree.\n **/\nexpose.parse = function( source, dialect ) {\n  // dialect will default if undefined\n  var md = new Markdown( dialect );\n  return md.toTree( source );\n};\n\n/**\n *  toHTML( markdown, [dialect]  ) -> String\n *  toHTML( md_tree ) -> String\n *  - markdown (String): markdown string to parse\n *  - md_tree (Markdown.JsonML): parsed markdown tree\n *\n *  Take markdown (either as a string or as a JsonML tree) and run it through\n *  [[toHTMLTree]] then turn it into a well-formated HTML fragment.\n **/\nexpose.toHTML = function toHTML( source , dialect , options ) {\n  var input = expose.toHTMLTree( source , dialect , options );\n\n  return expose.renderJsonML( input );\n};\n\n/**\n *  toHTMLTree( markdown, [dialect] ) -> JsonML\n *  toHTMLTree( md_tree ) -> JsonML\n *  - markdown (String): markdown string to parse\n *  - dialect (String | Dialect): the dialect to use, defaults to gruber\n *  - md_tree (Markdown.JsonML): parsed markdown tree\n *\n *  Turn markdown into HTML, represented as a JsonML tree. If a string is given\n *  to this function, it is first parsed into a markdown tree by calling\n *  [[parse]].\n **/\nexpose.toHTMLTree = function toHTMLTree( input, dialect , options ) {\n  // convert string input to an MD tree\n  if ( typeof input ===\"string\" ) input = this.parse( input, dialect );\n\n  // Now convert the MD tree to an HTML tree\n\n  // remove references from the tree\n  var attrs = extract_attr( input ),\n      refs = {};\n\n  if ( attrs && attrs.references ) {\n    refs = attrs.references;\n  }\n\n  var html = convert_tree_to_html( input, refs , options );\n  merge_text_nodes( html );\n  return html;\n};\n\n// For Spidermonkey based engines\nfunction mk_block_toSource() {\n  return \"Markdown.mk_block( \" +\n          uneval(this.toString()) +\n          \", \" +\n          uneval(this.trailing) +\n          \", \" +\n          uneval(this.lineNumber) +\n          \" )\";\n}\n\n// node\nfunction mk_block_inspect() {\n  var util = require(\"util\");\n  return \"Markdown.mk_block( \" +\n          util.inspect(this.toString()) +\n          \", \" +\n          util.inspect(this.trailing) +\n          \", \" +\n          util.inspect(this.lineNumber) +\n          \" )\";\n\n}\n\nvar mk_block = Markdown.mk_block = function(block, trail, line) {\n  // Be helpful for default case in tests.\n  if ( arguments.length == 1 ) trail = \"\\n\\n\";\n\n  var s = new String(block);\n  s.trailing = trail;\n  // To make it clear its not just a string\n  s.inspect = mk_block_inspect;\n  s.toSource = mk_block_toSource;\n\n  if ( line != undefined )\n    s.lineNumber = line;\n\n  return s;\n};\n\nfunction count_lines( str ) {\n  var n = 0, i = -1;\n  while ( ( i = str.indexOf(\"\\n\", i + 1) ) !== -1 ) n++;\n  return n;\n}\n\n// Internal - split source into rough blocks\nMarkdown.prototype.split_blocks = function splitBlocks( input, startLine ) {\n  input = input.replace(/(\\r\\n|\\n|\\r)/g, \"\\n\");\n  // [\\s\\S] matches _anything_ (newline or space)\n  // [^] is equivalent but doesn't work in IEs.\n  var re = /([\\s\\S]+?)($|\\n#|\\n(?:\\s*\\n|$)+)/g,\n      blocks = [],\n      m;\n\n  var line_no = 1;\n\n  if ( ( m = /^(\\s*\\n)/.exec(input) ) != null ) {\n    // skip (but count) leading blank lines\n    line_no += count_lines( m[0] );\n    re.lastIndex = m[0].length;\n  }\n\n  while ( ( m = re.exec(input) ) !== null ) {\n    if (m[2] == \"\\n#\") {\n      m[2] = \"\\n\";\n      re.lastIndex--;\n    }\n    blocks.push( mk_block( m[1], m[2], line_no ) );\n    line_no += count_lines( m[0] );\n  }\n\n  return blocks;\n};\n\n/**\n *  Markdown#processBlock( block, next ) -> undefined | [ JsonML, ... ]\n *  - block (String): the block to process\n *  - next (Array): the following blocks\n *\n * Process `block` and return an array of JsonML nodes representing `block`.\n *\n * It does this by asking each block level function in the dialect to process\n * the block until one can. Succesful handling is indicated by returning an\n * array (with zero or more JsonML nodes), failure by a false value.\n *\n * Blocks handlers are responsible for calling [[Markdown#processInline]]\n * themselves as appropriate.\n *\n * If the blocks were split incorrectly or adjacent blocks need collapsing you\n * can adjust `next` in place using shift/splice etc.\n *\n * If any of this default behaviour is not right for the dialect, you can\n * define a `__call__` method on the dialect that will get invoked to handle\n * the block processing.\n */\nMarkdown.prototype.processBlock = function processBlock( block, next ) {\n  var cbs = this.dialect.block,\n      ord = cbs.__order__;\n\n  if ( \"__call__\" in cbs ) {\n    return cbs.__call__.call(this, block, next);\n  }\n\n  for ( var i = 0; i < ord.length; i++ ) {\n    //D:this.debug( \"Testing\", ord[i] );\n    var res = cbs[ ord[i] ].call( this, block, next );\n    if ( res ) {\n      //D:this.debug(\"  matched\");\n      if ( !isArray(res) || ( res.length > 0 && !( isArray(res[0]) ) ) )\n        this.debug(ord[i], \"didn't return a proper array\");\n      //D:this.debug( \"\" );\n      return res;\n    }\n  }\n\n  // Uhoh! no match! Should we throw an error?\n  return [];\n};\n\nMarkdown.prototype.processInline = function processInline( block ) {\n  return this.dialect.inline.__call__.call( this, String( block ) );\n};\n\n/**\n *  Markdown#toTree( source ) -> JsonML\n *  - source (String): markdown source to parse\n *\n *  Parse `source` into a JsonML tree representing the markdown document.\n **/\n// custom_tree means set this.tree to `custom_tree` and restore old value on return\nMarkdown.prototype.toTree = function toTree( source, custom_root ) {\n  var blocks = source instanceof Array ? source : this.split_blocks( source );\n\n  // Make tree a member variable so its easier to mess with in extensions\n  var old_tree = this.tree;\n  try {\n    this.tree = custom_root || this.tree || [ \"markdown\" ];\n\n    blocks:\n    while ( blocks.length ) {\n      var b = this.processBlock( blocks.shift(), blocks );\n\n      // Reference blocks and the like won't return any content\n      if ( !b.length ) continue blocks;\n\n      this.tree.push.apply( this.tree, b );\n    }\n    return this.tree;\n  }\n  finally {\n    if ( custom_root ) {\n      this.tree = old_tree;\n    }\n  }\n};\n\n// Noop by default\nMarkdown.prototype.debug = function () {\n  var args = Array.prototype.slice.call( arguments);\n  args.unshift(this.debug_indent);\n  if ( typeof print !== \"undefined\" )\n      print.apply( print, args );\n  if ( typeof console !== \"undefined\" && typeof console.log !== \"undefined\" )\n      console.log.apply( null, args );\n}\n\nMarkdown.prototype.loop_re_over_block = function( re, block, cb ) {\n  // Dont use /g regexps with this\n  var m,\n      b = block.valueOf();\n\n  while ( b.length && (m = re.exec(b) ) != null ) {\n    b = b.substr( m[0].length );\n    cb.call(this, m);\n  }\n  return b;\n};\n\n/**\n * Markdown.dialects\n *\n * Namespace of built-in dialects.\n **/\nMarkdown.dialects = {};\n\n/**\n * Markdown.dialects.Gruber\n *\n * The default dialect that follows the rules set out by John Gruber's\n * markdown.pl as closely as possible. Well actually we follow the behaviour of\n * that script which in some places is not exactly what the syntax web page\n * says.\n **/\nMarkdown.dialects.Gruber = {\n  block: {\n    atxHeader: function atxHeader( block, next ) {\n      var m = block.match( /^(#{1,6})\\s*(.*?)\\s*#*\\s*(?:\\n|$)/ );\n\n      if ( !m ) return undefined;\n\n      var header = [ \"header\", { level: m[ 1 ].length } ];\n      Array.prototype.push.apply(header, this.processInline(m[ 2 ]));\n\n      if ( m[0].length < block.length )\n        next.unshift( mk_block( block.substr( m[0].length ), block.trailing, block.lineNumber + 2 ) );\n\n      return [ header ];\n    },\n\n    setextHeader: function setextHeader( block, next ) {\n      var m = block.match( /^(.*)\\n([-=])\\2\\2+(?:\\n|$)/ );\n\n      if ( !m ) return undefined;\n\n      var level = ( m[ 2 ] === \"=\" ) ? 1 : 2;\n      var header = [ \"header\", { level : level }, m[ 1 ] ];\n\n      if ( m[0].length < block.length )\n        next.unshift( mk_block( block.substr( m[0].length ), block.trailing, block.lineNumber + 2 ) );\n\n      return [ header ];\n    },\n\n    code: function code( block, next ) {\n      // |    Foo\n      // |bar\n      // should be a code block followed by a paragraph. Fun\n      //\n      // There might also be adjacent code block to merge.\n\n      var ret = [],\n          re = /^(?: {0,3}\\t| {4})(.*)\\n?/,\n          lines;\n\n      // 4 spaces + content\n      if ( !block.match( re ) ) return undefined;\n\n      block_search:\n      do {\n        // Now pull out the rest of the lines\n        var b = this.loop_re_over_block(\n                  re, block.valueOf(), function( m ) { ret.push( m[1] ); } );\n\n        if ( b.length ) {\n          // Case alluded to in first comment. push it back on as a new block\n          next.unshift( mk_block(b, block.trailing) );\n          break block_search;\n        }\n        else if ( next.length ) {\n          // Check the next block - it might be code too\n          if ( !next[0].match( re ) ) break block_search;\n\n          // Pull how how many blanks lines follow - minus two to account for .join\n          ret.push ( block.trailing.replace(/[^\\n]/g, \"\").substring(2) );\n\n          block = next.shift();\n        }\n        else {\n          break block_search;\n        }\n      } while ( true );\n\n      return [ [ \"code_block\", ret.join(\"\\n\") ] ];\n    },\n\n    horizRule: function horizRule( block, next ) {\n      // this needs to find any hr in the block to handle abutting blocks\n      var m = block.match( /^(?:([\\s\\S]*?)\\n)?[ \\t]*([-_*])(?:[ \\t]*\\2){2,}[ \\t]*(?:\\n([\\s\\S]*))?$/ );\n\n      if ( !m ) {\n        return undefined;\n      }\n\n      var jsonml = [ [ \"hr\" ] ];\n\n      // if there's a leading abutting block, process it\n      if ( m[ 1 ] ) {\n        jsonml.unshift.apply( jsonml, this.processBlock( m[ 1 ], [] ) );\n      }\n\n      // if there's a trailing abutting block, stick it into next\n      if ( m[ 3 ] ) {\n        next.unshift( mk_block( m[ 3 ] ) );\n      }\n\n      return jsonml;\n    },\n\n    // There are two types of lists. Tight and loose. Tight lists have no whitespace\n    // between the items (and result in text just in the <li>) and loose lists,\n    // which have an empty line between list items, resulting in (one or more)\n    // paragraphs inside the <li>.\n    //\n    // There are all sorts weird edge cases about the original markdown.pl's\n    // handling of lists:\n    //\n    // * Nested lists are supposed to be indented by four chars per level. But\n    //   if they aren't, you can get a nested list by indenting by less than\n    //   four so long as the indent doesn't match an indent of an existing list\n    //   item in the 'nest stack'.\n    //\n    // * The type of the list (bullet or number) is controlled just by the\n    //    first item at the indent. Subsequent changes are ignored unless they\n    //    are for nested lists\n    //\n    lists: (function( ) {\n      // Use a closure to hide a few variables.\n      var any_list = \"[*+-]|\\\\d+\\\\.\",\n          bullet_list = /[*+-]/,\n          number_list = /\\d+\\./,\n          // Capture leading indent as it matters for determining nested lists.\n          is_list_re = new RegExp( \"^( {0,3})(\" + any_list + \")[ \\t]+\" ),\n          indent_re = \"(?: {0,3}\\\\t| {4})\";\n\n      // TODO: Cache this regexp for certain depths.\n      // Create a regexp suitable for matching an li for a given stack depth\n      function regex_for_depth( depth ) {\n\n        return new RegExp(\n          // m[1] = indent, m[2] = list_type\n          \"(?:^(\" + indent_re + \"{0,\" + depth + \"} {0,3})(\" + any_list + \")\\\\s+)|\" +\n          // m[3] = cont\n          \"(^\" + indent_re + \"{0,\" + (depth-1) + \"}[ ]{0,4})\"\n        );\n      }\n      function expand_tab( input ) {\n        return input.replace( / {0,3}\\t/g, \"    \" );\n      }\n\n      // Add inline content `inline` to `li`. inline comes from processInline\n      // so is an array of content\n      function add(li, loose, inline, nl) {\n        if ( loose ) {\n          li.push( [ \"para\" ].concat(inline) );\n          return;\n        }\n        // Hmmm, should this be any block level element or just paras?\n        var add_to = li[li.length -1] instanceof Array && li[li.length - 1][0] == \"para\"\n                   ? li[li.length -1]\n                   : li;\n\n        // If there is already some content in this list, add the new line in\n        if ( nl && li.length > 1 ) inline.unshift(nl);\n\n        for ( var i = 0; i < inline.length; i++ ) {\n          var what = inline[i],\n              is_str = typeof what == \"string\";\n          if ( is_str && add_to.length > 1 && typeof add_to[add_to.length-1] == \"string\" ) {\n            add_to[ add_to.length-1 ] += what;\n          }\n          else {\n            add_to.push( what );\n          }\n        }\n      }\n\n      // contained means have an indent greater than the current one. On\n      // *every* line in the block\n      function get_contained_blocks( depth, blocks ) {\n\n        var re = new RegExp( \"^(\" + indent_re + \"{\" + depth + \"}.*?\\\\n?)*$\" ),\n            replace = new RegExp(\"^\" + indent_re + \"{\" + depth + \"}\", \"gm\"),\n            ret = [];\n\n        while ( blocks.length > 0 ) {\n          if ( re.exec( blocks[0] ) ) {\n            var b = blocks.shift(),\n                // Now remove that indent\n                x = b.replace( replace, \"\");\n\n            ret.push( mk_block( x, b.trailing, b.lineNumber ) );\n          }\n          else {\n            break;\n          }\n        }\n        return ret;\n      }\n\n      // passed to stack.forEach to turn list items up the stack into paras\n      function paragraphify(s, i, stack) {\n        var list = s.list;\n        var last_li = list[list.length-1];\n\n        if ( last_li[1] instanceof Array && last_li[1][0] == \"para\" ) {\n          return;\n        }\n        if ( i + 1 == stack.length ) {\n          // Last stack frame\n          // Keep the same array, but replace the contents\n          last_li.push( [\"para\"].concat( last_li.splice(1, last_li.length - 1) ) );\n        }\n        else {\n          var sublist = last_li.pop();\n          last_li.push( [\"para\"].concat( last_li.splice(1, last_li.length - 1) ), sublist );\n        }\n      }\n\n      // The matcher function\n      return function( block, next ) {\n        var m = block.match( is_list_re );\n        if ( !m ) return undefined;\n\n        function make_list( m ) {\n          var list = bullet_list.exec( m[2] )\n                   ? [\"bulletlist\"]\n                   : [\"numberlist\"];\n\n          stack.push( { list: list, indent: m[1] } );\n          return list;\n        }\n\n\n        var stack = [], // Stack of lists for nesting.\n            list = make_list( m ),\n            last_li,\n            loose = false,\n            ret = [ stack[0].list ],\n            i;\n\n        // Loop to search over block looking for inner block elements and loose lists\n        loose_search:\n        while ( true ) {\n          // Split into lines preserving new lines at end of line\n          var lines = block.split( /(?=\\n)/ );\n\n          // We have to grab all lines for a li and call processInline on them\n          // once as there are some inline things that can span lines.\n          var li_accumulate = \"\";\n\n          // Loop over the lines in this block looking for tight lists.\n          tight_search:\n          for ( var line_no = 0; line_no < lines.length; line_no++ ) {\n            var nl = \"\",\n                l = lines[line_no].replace(/^\\n/, function(n) { nl = n; return \"\"; });\n\n            // TODO: really should cache this\n            var line_re = regex_for_depth( stack.length );\n\n            m = l.match( line_re );\n            //print( \"line:\", uneval(l), \"\\nline match:\", uneval(m) );\n\n            // We have a list item\n            if ( m[1] !== undefined ) {\n              // Process the previous list item, if any\n              if ( li_accumulate.length ) {\n                add( last_li, loose, this.processInline( li_accumulate ), nl );\n                // Loose mode will have been dealt with. Reset it\n                loose = false;\n                li_accumulate = \"\";\n              }\n\n              m[1] = expand_tab( m[1] );\n              var wanted_depth = Math.floor(m[1].length/4)+1;\n              //print( \"want:\", wanted_depth, \"stack:\", stack.length);\n              if ( wanted_depth > stack.length ) {\n                // Deep enough for a nested list outright\n                //print ( \"new nested list\" );\n                list = make_list( m );\n                last_li.push( list );\n                last_li = list[1] = [ \"listitem\" ];\n              }\n              else {\n                // We aren't deep enough to be strictly a new level. This is\n                // where Md.pl goes nuts. If the indent matches a level in the\n                // stack, put it there, else put it one deeper then the\n                // wanted_depth deserves.\n                var found = false;\n                for ( i = 0; i < stack.length; i++ ) {\n                  if ( stack[ i ].indent != m[1] ) continue;\n                  list = stack[ i ].list;\n                  stack.splice( i+1, stack.length - (i+1) );\n                  found = true;\n                  break;\n                }\n\n                if (!found) {\n                  //print(\"not found. l:\", uneval(l));\n                  wanted_depth++;\n                  if ( wanted_depth <= stack.length ) {\n                    stack.splice(wanted_depth, stack.length - wanted_depth);\n                    //print(\"Desired depth now\", wanted_depth, \"stack:\", stack.length);\n                    list = stack[wanted_depth-1].list;\n                    //print(\"list:\", uneval(list) );\n                  }\n                  else {\n                    //print (\"made new stack for messy indent\");\n                    list = make_list(m);\n                    last_li.push(list);\n                  }\n                }\n\n                //print( uneval(list), \"last\", list === stack[stack.length-1].list );\n                last_li = [ \"listitem\" ];\n                list.push(last_li);\n              } // end depth of shenegains\n              nl = \"\";\n            }\n\n            // Add content\n            if ( l.length > m[0].length ) {\n              li_accumulate += nl + l.substr( m[0].length );\n            }\n          } // tight_search\n\n          if ( li_accumulate.length ) {\n            add( last_li, loose, this.processInline( li_accumulate ), nl );\n            // Loose mode will have been dealt with. Reset it\n            loose = false;\n            li_accumulate = \"\";\n          }\n\n          // Look at the next block - we might have a loose list. Or an extra\n          // paragraph for the current li\n          var contained = get_contained_blocks( stack.length, next );\n\n          // Deal with code blocks or properly nested lists\n          if ( contained.length > 0 ) {\n            // Make sure all listitems up the stack are paragraphs\n            forEach( stack, paragraphify, this);\n\n            last_li.push.apply( last_li, this.toTree( contained, [] ) );\n          }\n\n          var next_block = next[0] && next[0].valueOf() || \"\";\n\n          if ( next_block.match(is_list_re) || next_block.match( /^ / ) ) {\n            block = next.shift();\n\n            // Check for an HR following a list: features/lists/hr_abutting\n            var hr = this.dialect.block.horizRule( block, next );\n\n            if ( hr ) {\n              ret.push.apply(ret, hr);\n              break;\n            }\n\n            // Make sure all listitems up the stack are paragraphs\n            forEach( stack, paragraphify, this);\n\n            loose = true;\n            continue loose_search;\n          }\n          break;\n        } // loose_search\n\n        return ret;\n      };\n    })(),\n\n    blockquote: function blockquote( block, next ) {\n      if ( !block.match( /^>/m ) )\n        return undefined;\n\n      var jsonml = [];\n\n      // separate out the leading abutting block, if any. I.e. in this case:\n      //\n      //  a\n      //  > b\n      //\n      if ( block[ 0 ] != \">\" ) {\n        var lines = block.split( /\\n/ ),\n            prev = [],\n            line_no = block.lineNumber;\n\n        // keep shifting lines until you find a crotchet\n        while ( lines.length && lines[ 0 ][ 0 ] != \">\" ) {\n            prev.push( lines.shift() );\n            line_no++;\n        }\n\n        var abutting = mk_block( prev.join( \"\\n\" ), \"\\n\", block.lineNumber );\n        jsonml.push.apply( jsonml, this.processBlock( abutting, [] ) );\n        // reassemble new block of just block quotes!\n        block = mk_block( lines.join( \"\\n\" ), block.trailing, line_no );\n      }\n\n\n      // if the next block is also a blockquote merge it in\n      while ( next.length && next[ 0 ][ 0 ] == \">\" ) {\n        var b = next.shift();\n        block = mk_block( block + block.trailing + b, b.trailing, block.lineNumber );\n      }\n\n      // Strip off the leading \"> \" and re-process as a block.\n      var input = block.replace( /^> ?/gm, \"\" ),\n          old_tree = this.tree,\n          processedBlock = this.toTree( input, [ \"blockquote\" ] ),\n          attr = extract_attr( processedBlock );\n\n      // If any link references were found get rid of them\n      if ( attr && attr.references ) {\n        delete attr.references;\n        // And then remove the attribute object if it's empty\n        if ( isEmpty( attr ) ) {\n          processedBlock.splice( 1, 1 );\n        }\n      }\n\n      jsonml.push( processedBlock );\n      return jsonml;\n    },\n\n    referenceDefn: function referenceDefn( block, next) {\n      var re = /^\\s*\\[(.*?)\\]:\\s*(\\S+)(?:\\s+(?:(['\"])(.*?)\\3|\\((.*?)\\)))?\\n?/;\n      // interesting matches are [ , ref_id, url, , title, title ]\n\n      if ( !block.match(re) )\n        return undefined;\n\n      // make an attribute node if it doesn't exist\n      if ( !extract_attr( this.tree ) ) {\n        this.tree.splice( 1, 0, {} );\n      }\n\n      var attrs = extract_attr( this.tree );\n\n      // make a references hash if it doesn't exist\n      if ( attrs.references === undefined ) {\n        attrs.references = {};\n      }\n\n      var b = this.loop_re_over_block(re, block, function( m ) {\n\n        if ( m[2] && m[2][0] == \"<\" && m[2][m[2].length-1] == \">\" )\n          m[2] = m[2].substring( 1, m[2].length - 1 );\n\n        var ref = attrs.references[ m[1].toLowerCase() ] = {\n          href: m[2]\n        };\n\n        if ( m[4] !== undefined )\n          ref.title = m[4];\n        else if ( m[5] !== undefined )\n          ref.title = m[5];\n\n      } );\n\n      if ( b.length )\n        next.unshift( mk_block( b, block.trailing ) );\n\n      return [];\n    },\n\n    para: function para( block, next ) {\n      // everything's a para!\n      return [ [\"para\"].concat( this.processInline( block ) ) ];\n    }\n  }\n};\n\nMarkdown.dialects.Gruber.inline = {\n\n    __oneElement__: function oneElement( text, patterns_or_re, previous_nodes ) {\n      var m,\n          res,\n          lastIndex = 0;\n\n      patterns_or_re = patterns_or_re || this.dialect.inline.__patterns__;\n      var re = new RegExp( \"([\\\\s\\\\S]*?)(\" + (patterns_or_re.source || patterns_or_re) + \")\" );\n\n      m = re.exec( text );\n      if (!m) {\n        // Just boring text\n        return [ text.length, text ];\n      }\n      else if ( m[1] ) {\n        // Some un-interesting text matched. Return that first\n        return [ m[1].length, m[1] ];\n      }\n\n      var res;\n      if ( m[2] in this.dialect.inline ) {\n        res = this.dialect.inline[ m[2] ].call(\n                  this,\n                  text.substr( m.index ), m, previous_nodes || [] );\n      }\n      // Default for now to make dev easier. just slurp special and output it.\n      res = res || [ m[2].length, m[2] ];\n      return res;\n    },\n\n    __call__: function inline( text, patterns ) {\n\n      var out = [],\n          res;\n\n      function add(x) {\n        //D:self.debug(\"  adding output\", uneval(x));\n        if ( typeof x == \"string\" && typeof out[out.length-1] == \"string\" )\n          out[ out.length-1 ] += x;\n        else\n          out.push(x);\n      }\n\n      while ( text.length > 0 ) {\n        res = this.dialect.inline.__oneElement__.call(this, text, patterns, out );\n        text = text.substr( res.shift() );\n        forEach(res, add )\n      }\n\n      return out;\n    },\n\n    // These characters are intersting elsewhere, so have rules for them so that\n    // chunks of plain text blocks don't include them\n    \"]\": function () {},\n    \"}\": function () {},\n\n    __escape__ : /^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-]/,\n\n    \"\\\\\": function escaped( text ) {\n      // [ length of input processed, node/children to add... ]\n      // Only esacape: \\ ` * _ { } [ ] ( ) # * + - . !\n      if ( this.dialect.inline.__escape__.exec( text ) )\n        return [ 2, text.charAt( 1 ) ];\n      else\n        // Not an esacpe\n        return [ 1, \"\\\\\" ];\n    },\n\n    \"![\": function image( text ) {\n\n      // Unlike images, alt text is plain text only. no other elements are\n      // allowed in there\n\n      // ![Alt text](/path/to/img.jpg \"Optional title\")\n      //      1          2            3       4         <--- captures\n      var m = text.match( /^!\\[(.*?)\\][ \\t]*\\([ \\t]*([^\")]*?)(?:[ \\t]+([\"'])(.*?)\\3)?[ \\t]*\\)/ );\n\n      if ( m ) {\n        if ( m[2] && m[2][0] == \"<\" && m[2][m[2].length-1] == \">\" )\n          m[2] = m[2].substring( 1, m[2].length - 1 );\n\n        m[2] = this.dialect.inline.__call__.call( this, m[2], /\\\\/ )[0];\n\n        var attrs = { alt: m[1], href: m[2] || \"\" };\n        if ( m[4] !== undefined)\n          attrs.title = m[4];\n\n        return [ m[0].length, [ \"img\", attrs ] ];\n      }\n\n      // ![Alt text][id]\n      m = text.match( /^!\\[(.*?)\\][ \\t]*\\[(.*?)\\]/ );\n\n      if ( m ) {\n        // We can't check if the reference is known here as it likely wont be\n        // found till after. Check it in md tree->hmtl tree conversion\n        return [ m[0].length, [ \"img_ref\", { alt: m[1], ref: m[2].toLowerCase(), original: m[0] } ] ];\n      }\n\n      // Just consume the '!['\n      return [ 2, \"![\" ];\n    },\n\n    \"[\": function link( text ) {\n\n      var orig = String(text);\n      // Inline content is possible inside `link text`\n      var res = Markdown.DialectHelpers.inline_until_char.call( this, text.substr(1), \"]\" );\n\n      // No closing ']' found. Just consume the [\n      if ( !res ) return [ 1, \"[\" ];\n\n      var consumed = 1 + res[ 0 ],\n          children = res[ 1 ],\n          link,\n          attrs;\n\n      // At this point the first [...] has been parsed. See what follows to find\n      // out which kind of link we are (reference or direct url)\n      text = text.substr( consumed );\n\n      // [link text](/path/to/img.jpg \"Optional title\")\n      //                 1            2       3         <--- captures\n      // This will capture up to the last paren in the block. We then pull\n      // back based on if there a matching ones in the url\n      //    ([here](/url/(test))\n      // The parens have to be balanced\n      var m = text.match( /^\\s*\\([ \\t]*([^\"']*)(?:[ \\t]+([\"'])(.*?)\\2)?[ \\t]*\\)/ );\n      if ( m ) {\n        var url = m[1];\n        consumed += m[0].length;\n\n        if ( url && url[0] == \"<\" && url[url.length-1] == \">\" )\n          url = url.substring( 1, url.length - 1 );\n\n        // If there is a title we don't have to worry about parens in the url\n        if ( !m[3] ) {\n          var open_parens = 1; // One open that isn't in the capture\n          for ( var len = 0; len < url.length; len++ ) {\n            switch ( url[len] ) {\n            case \"(\":\n              open_parens++;\n              break;\n            case \")\":\n              if ( --open_parens == 0) {\n                consumed -= url.length - len;\n                url = url.substring(0, len);\n              }\n              break;\n            }\n          }\n        }\n\n        // Process escapes only\n        url = this.dialect.inline.__call__.call( this, url, /\\\\/ )[0];\n\n        attrs = { href: url || \"\" };\n        if ( m[3] !== undefined)\n          attrs.title = m[3];\n\n        link = [ \"link\", attrs ].concat( children );\n        return [ consumed, link ];\n      }\n\n      // [Alt text][id]\n      // [Alt text] [id]\n      m = text.match( /^\\s*\\[(.*?)\\]/ );\n\n      if ( m ) {\n\n        consumed += m[ 0 ].length;\n\n        // [links][] uses links as its reference\n        attrs = { ref: ( m[ 1 ] || String(children) ).toLowerCase(),  original: orig.substr( 0, consumed ) };\n\n        link = [ \"link_ref\", attrs ].concat( children );\n\n        // We can't check if the reference is known here as it likely wont be\n        // found till after. Check it in md tree->hmtl tree conversion.\n        // Store the original so that conversion can revert if the ref isn't found.\n        return [ consumed, link ];\n      }\n\n      // [id]\n      // Only if id is plain (no formatting.)\n      if ( children.length == 1 && typeof children[0] == \"string\" ) {\n\n        attrs = { ref: children[0].toLowerCase(),  original: orig.substr( 0, consumed ) };\n        link = [ \"link_ref\", attrs, children[0] ];\n        return [ consumed, link ];\n      }\n\n      // Just consume the \"[\"\n      return [ 1, \"[\" ];\n    },\n\n\n    \"<\": function autoLink( text ) {\n      var m;\n\n      if ( ( m = text.match( /^<(?:((https?|ftp|mailto):[^>]+)|(.*?@.*?\\.[a-zA-Z]+))>/ ) ) != null ) {\n        if ( m[3] ) {\n          return [ m[0].length, [ \"link\", { href: \"mailto:\" + m[3] }, m[3] ] ];\n\n        }\n        else if ( m[2] == \"mailto\" ) {\n          return [ m[0].length, [ \"link\", { href: m[1] }, m[1].substr(\"mailto:\".length ) ] ];\n        }\n        else\n          return [ m[0].length, [ \"link\", { href: m[1] }, m[1] ] ];\n      }\n\n      return [ 1, \"<\" ];\n    },\n\n    \"`\": function inlineCode( text ) {\n      // Inline code block. as many backticks as you like to start it\n      // Always skip over the opening ticks.\n      var m = text.match( /(`+)(([\\s\\S]*?)\\1)/ );\n\n      if ( m && m[2] )\n        return [ m[1].length + m[2].length, [ \"inlinecode\", m[3] ] ];\n      else {\n        // TODO: No matching end code found - warn!\n        return [ 1, \"`\" ];\n      }\n    },\n\n    \"  \\n\": function lineBreak( text ) {\n      return [ 3, [ \"linebreak\" ] ];\n    }\n\n};\n\n// Meta Helper/generator method for em and strong handling\nfunction strong_em( tag, md ) {\n\n  var state_slot = tag + \"_state\",\n      other_slot = tag == \"strong\" ? \"em_state\" : \"strong_state\";\n\n  function CloseTag(len) {\n    this.len_after = len;\n    this.name = \"close_\" + md;\n  }\n\n  return function ( text, orig_match ) {\n\n    if ( this[state_slot][0] == md ) {\n      // Most recent em is of this type\n      //D:this.debug(\"closing\", md);\n      this[state_slot].shift();\n\n      // \"Consume\" everything to go back to the recrusion in the else-block below\n      return[ text.length, new CloseTag(text.length-md.length) ];\n    }\n    else {\n      // Store a clone of the em/strong states\n      var other = this[other_slot].slice(),\n          state = this[state_slot].slice();\n\n      this[state_slot].unshift(md);\n\n      //D:this.debug_indent += \"  \";\n\n      // Recurse\n      var res = this.processInline( text.substr( md.length ) );\n      //D:this.debug_indent = this.debug_indent.substr(2);\n\n      var last = res[res.length - 1];\n\n      //D:this.debug(\"processInline from\", tag + \": \", uneval( res ) );\n\n      var check = this[state_slot].shift();\n      if ( last instanceof CloseTag ) {\n        res.pop();\n        // We matched! Huzzah.\n        var consumed = text.length - last.len_after;\n        return [ consumed, [ tag ].concat(res) ];\n      }\n      else {\n        // Restore the state of the other kind. We might have mistakenly closed it.\n        this[other_slot] = other;\n        this[state_slot] = state;\n\n        // We can't reuse the processed result as it could have wrong parsing contexts in it.\n        return [ md.length, md ];\n      }\n    }\n  }; // End returned function\n}\n\nMarkdown.dialects.Gruber.inline[\"**\"] = strong_em(\"strong\", \"**\");\nMarkdown.dialects.Gruber.inline[\"__\"] = strong_em(\"strong\", \"__\");\nMarkdown.dialects.Gruber.inline[\"*\"]  = strong_em(\"em\", \"*\");\nMarkdown.dialects.Gruber.inline[\"_\"]  = strong_em(\"em\", \"_\");\n\n\n// Build default order from insertion order.\nMarkdown.buildBlockOrder = function(d) {\n  var ord = [];\n  for ( var i in d ) {\n    if ( i == \"__order__\" || i == \"__call__\" ) continue;\n    ord.push( i );\n  }\n  d.__order__ = ord;\n};\n\n// Build patterns for inline matcher\nMarkdown.buildInlinePatterns = function(d) {\n  var patterns = [];\n\n  for ( var i in d ) {\n    // __foo__ is reserved and not a pattern\n    if ( i.match( /^__.*__$/) ) continue;\n    var l = i.replace( /([\\\\.*+?|()\\[\\]{}])/g, \"\\\\$1\" )\n             .replace( /\\n/, \"\\\\n\" );\n    patterns.push( i.length == 1 ? l : \"(?:\" + l + \")\" );\n  }\n\n  patterns = patterns.join(\"|\");\n  d.__patterns__ = patterns;\n  //print(\"patterns:\", uneval( patterns ) );\n\n  var fn = d.__call__;\n  d.__call__ = function(text, pattern) {\n    if ( pattern != undefined ) {\n      return fn.call(this, text, pattern);\n    }\n    else\n    {\n      return fn.call(this, text, patterns);\n    }\n  };\n};\n\nMarkdown.DialectHelpers = {};\nMarkdown.DialectHelpers.inline_until_char = function( text, want ) {\n  var consumed = 0,\n      nodes = [];\n\n  while ( true ) {\n    if ( text.charAt( consumed ) == want ) {\n      // Found the character we were looking for\n      consumed++;\n      return [ consumed, nodes ];\n    }\n\n    if ( consumed >= text.length ) {\n      // No closing char found. Abort.\n      return null;\n    }\n\n    var res = this.dialect.inline.__oneElement__.call(this, text.substr( consumed ) );\n    consumed += res[ 0 ];\n    // Add any returned nodes.\n    nodes.push.apply( nodes, res.slice( 1 ) );\n  }\n}\n\n// Helper function to make sub-classing a dialect easier\nMarkdown.subclassDialect = function( d ) {\n  function Block() {}\n  Block.prototype = d.block;\n  function Inline() {}\n  Inline.prototype = d.inline;\n\n  return { block: new Block(), inline: new Inline() };\n};\n\nMarkdown.buildBlockOrder ( Markdown.dialects.Gruber.block );\nMarkdown.buildInlinePatterns( Markdown.dialects.Gruber.inline );\n\nMarkdown.dialects.Maruku = Markdown.subclassDialect( Markdown.dialects.Gruber );\n\nMarkdown.dialects.Maruku.processMetaHash = function processMetaHash( meta_string ) {\n  var meta = split_meta_hash( meta_string ),\n      attr = {};\n\n  for ( var i = 0; i < meta.length; ++i ) {\n    // id: #foo\n    if ( /^#/.test( meta[ i ] ) ) {\n      attr.id = meta[ i ].substring( 1 );\n    }\n    // class: .foo\n    else if ( /^\\./.test( meta[ i ] ) ) {\n      // if class already exists, append the new one\n      if ( attr[\"class\"] ) {\n        attr[\"class\"] = attr[\"class\"] + meta[ i ].replace( /./, \" \" );\n      }\n      else {\n        attr[\"class\"] = meta[ i ].substring( 1 );\n      }\n    }\n    // attribute: foo=bar\n    else if ( /\\=/.test( meta[ i ] ) ) {\n      var s = meta[ i ].split( /\\=/ );\n      attr[ s[ 0 ] ] = s[ 1 ];\n    }\n  }\n\n  return attr;\n}\n\nfunction split_meta_hash( meta_string ) {\n  var meta = meta_string.split( \"\" ),\n      parts = [ \"\" ],\n      in_quotes = false;\n\n  while ( meta.length ) {\n    var letter = meta.shift();\n    switch ( letter ) {\n      case \" \" :\n        // if we're in a quoted section, keep it\n        if ( in_quotes ) {\n          parts[ parts.length - 1 ] += letter;\n        }\n        // otherwise make a new part\n        else {\n          parts.push( \"\" );\n        }\n        break;\n      case \"'\" :\n      case '\"' :\n        // reverse the quotes and move straight on\n        in_quotes = !in_quotes;\n        break;\n      case \"\\\\\" :\n        // shift off the next letter to be used straight away.\n        // it was escaped so we'll keep it whatever it is\n        letter = meta.shift();\n      default :\n        parts[ parts.length - 1 ] += letter;\n        break;\n    }\n  }\n\n  return parts;\n}\n\nMarkdown.dialects.Maruku.block.document_meta = function document_meta( block, next ) {\n  // we're only interested in the first block\n  if ( block.lineNumber > 1 ) return undefined;\n\n  // document_meta blocks consist of one or more lines of `Key: Value\\n`\n  if ( ! block.match( /^(?:\\w+:.*\\n)*\\w+:.*$/ ) ) return undefined;\n\n  // make an attribute node if it doesn't exist\n  if ( !extract_attr( this.tree ) ) {\n    this.tree.splice( 1, 0, {} );\n  }\n\n  var pairs = block.split( /\\n/ );\n  for ( p in pairs ) {\n    var m = pairs[ p ].match( /(\\w+):\\s*(.*)$/ ),\n        key = m[ 1 ].toLowerCase(),\n        value = m[ 2 ];\n\n    this.tree[ 1 ][ key ] = value;\n  }\n\n  // document_meta produces no content!\n  return [];\n};\n\nMarkdown.dialects.Maruku.block.block_meta = function block_meta( block, next ) {\n  // check if the last line of the block is an meta hash\n  var m = block.match( /(^|\\n) {0,3}\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}$/ );\n  if ( !m ) return undefined;\n\n  // process the meta hash\n  var attr = this.dialect.processMetaHash( m[ 2 ] );\n\n  var hash;\n\n  // if we matched ^ then we need to apply meta to the previous block\n  if ( m[ 1 ] === \"\" ) {\n    var node = this.tree[ this.tree.length - 1 ];\n    hash = extract_attr( node );\n\n    // if the node is a string (rather than JsonML), bail\n    if ( typeof node === \"string\" ) return undefined;\n\n    // create the attribute hash if it doesn't exist\n    if ( !hash ) {\n      hash = {};\n      node.splice( 1, 0, hash );\n    }\n\n    // add the attributes in\n    for ( a in attr ) {\n      hash[ a ] = attr[ a ];\n    }\n\n    // return nothing so the meta hash is removed\n    return [];\n  }\n\n  // pull the meta hash off the block and process what's left\n  var b = block.replace( /\\n.*$/, \"\" ),\n      result = this.processBlock( b, [] );\n\n  // get or make the attributes hash\n  hash = extract_attr( result[ 0 ] );\n  if ( !hash ) {\n    hash = {};\n    result[ 0 ].splice( 1, 0, hash );\n  }\n\n  // attach the attributes to the block\n  for ( a in attr ) {\n    hash[ a ] = attr[ a ];\n  }\n\n  return result;\n};\n\nMarkdown.dialects.Maruku.block.definition_list = function definition_list( block, next ) {\n  // one or more terms followed by one or more definitions, in a single block\n  var tight = /^((?:[^\\s:].*\\n)+):\\s+([\\s\\S]+)$/,\n      list = [ \"dl\" ],\n      i, m;\n\n  // see if we're dealing with a tight or loose block\n  if ( ( m = block.match( tight ) ) ) {\n    // pull subsequent tight DL blocks out of `next`\n    var blocks = [ block ];\n    while ( next.length && tight.exec( next[ 0 ] ) ) {\n      blocks.push( next.shift() );\n    }\n\n    for ( var b = 0; b < blocks.length; ++b ) {\n      var m = blocks[ b ].match( tight ),\n          terms = m[ 1 ].replace( /\\n$/, \"\" ).split( /\\n/ ),\n          defns = m[ 2 ].split( /\\n:\\s+/ );\n\n      // print( uneval( m ) );\n\n      for ( i = 0; i < terms.length; ++i ) {\n        list.push( [ \"dt\", terms[ i ] ] );\n      }\n\n      for ( i = 0; i < defns.length; ++i ) {\n        // run inline processing over the definition\n        list.push( [ \"dd\" ].concat( this.processInline( defns[ i ].replace( /(\\n)\\s+/, \"$1\" ) ) ) );\n      }\n    }\n  }\n  else {\n    return undefined;\n  }\n\n  return [ list ];\n};\n\n// splits on unescaped instances of @ch. If @ch is not a character the result\n// can be unpredictable\n\nMarkdown.dialects.Maruku.block.table = function table (block, next) {\n\n    var _split_on_unescaped = function(s, ch) {\n        ch = ch || '\\\\s';\n        if (ch.match(/^[\\\\|\\[\\]{}?*.+^$]$/)) { ch = '\\\\' + ch; }\n        var res = [ ],\n            r = new RegExp('^((?:\\\\\\\\.|[^\\\\\\\\' + ch + '])*)' + ch + '(.*)'),\n            m;\n        while(m = s.match(r)) {\n            res.push(m[1]);\n            s = m[2];\n        }\n        res.push(s);\n        return res;\n    }\n\n    var leading_pipe = /^ {0,3}\\|(.+)\\n {0,3}\\|\\s*([\\-:]+[\\-| :]*)\\n((?:\\s*\\|.*(?:\\n|$))*)(?=\\n|$)/,\n        // find at least an unescaped pipe in each line\n        no_leading_pipe = /^ {0,3}(\\S(?:\\\\.|[^\\\\|])*\\|.*)\\n {0,3}([\\-:]+\\s*\\|[\\-| :]*)\\n((?:(?:\\\\.|[^\\\\|])*\\|.*(?:\\n|$))*)(?=\\n|$)/,\n        i, m;\n    if (m = block.match(leading_pipe)) {\n        // remove leading pipes in contents\n        // (header and horizontal rule already have the leading pipe left out)\n        m[3] = m[3].replace(/^\\s*\\|/gm, '');\n    } else if (! ( m = block.match(no_leading_pipe))) {\n        return undefined;\n    }\n\n    var table = [ \"table\", [ \"thead\", [ \"tr\" ] ], [ \"tbody\" ] ];\n\n    // remove trailing pipes, then split on pipes\n    // (no escaped pipes are allowed in horizontal rule)\n    m[2] = m[2].replace(/\\|\\s*$/, '').split('|');\n\n    // process alignment\n    var html_attrs = [ ];\n    forEach (m[2], function (s) {\n        if (s.match(/^\\s*-+:\\s*$/))       html_attrs.push({align: \"right\"});\n        else if (s.match(/^\\s*:-+\\s*$/))  html_attrs.push({align: \"left\"});\n        else if (s.match(/^\\s*:-+:\\s*$/)) html_attrs.push({align: \"center\"});\n        else                              html_attrs.push({});\n    });\n\n    // now for the header, avoid escaped pipes\n    m[1] = _split_on_unescaped(m[1].replace(/\\|\\s*$/, ''), '|');\n    for (i = 0; i < m[1].length; i++) {\n        table[1][1].push(['th', html_attrs[i] || {}].concat(\n            this.processInline(m[1][i].trim())));\n    }\n\n    // now for body contents\n    forEach (m[3].replace(/\\|\\s*$/mg, '').split('\\n'), function (row) {\n        var html_row = ['tr'];\n        row = _split_on_unescaped(row, '|');\n        for (i = 0; i < row.length; i++) {\n            html_row.push(['td', html_attrs[i] || {}].concat(this.processInline(row[i].trim())));\n        }\n        table[2].push(html_row);\n    }, this);\n\n    return [table];\n}\n\nMarkdown.dialects.Maruku.inline[ \"{:\" ] = function inline_meta( text, matches, out ) {\n  if ( !out.length ) {\n    return [ 2, \"{:\" ];\n  }\n\n  // get the preceeding element\n  var before = out[ out.length - 1 ];\n\n  if ( typeof before === \"string\" ) {\n    return [ 2, \"{:\" ];\n  }\n\n  // match a meta hash\n  var m = text.match( /^\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}/ );\n\n  // no match, false alarm\n  if ( !m ) {\n    return [ 2, \"{:\" ];\n  }\n\n  // attach the attributes to the preceeding element\n  var meta = this.dialect.processMetaHash( m[ 1 ] ),\n      attr = extract_attr( before );\n\n  if ( !attr ) {\n    attr = {};\n    before.splice( 1, 0, attr );\n  }\n\n  for ( var k in meta ) {\n    attr[ k ] = meta[ k ];\n  }\n\n  // cut out the string and replace it with nothing\n  return [ m[ 0 ].length, \"\" ];\n};\n\nMarkdown.dialects.Maruku.inline.__escape__ = /^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-|:]/;\n\nMarkdown.buildBlockOrder ( Markdown.dialects.Maruku.block );\nMarkdown.buildInlinePatterns( Markdown.dialects.Maruku.inline );\n\nvar isArray = Array.isArray || function(obj) {\n  return Object.prototype.toString.call(obj) == \"[object Array]\";\n};\n\nvar forEach;\n// Don't mess with Array.prototype. Its not friendly\nif ( Array.prototype.forEach ) {\n  forEach = function( arr, cb, thisp ) {\n    return arr.forEach( cb, thisp );\n  };\n}\nelse {\n  forEach = function(arr, cb, thisp) {\n    for (var i = 0; i < arr.length; i++) {\n      cb.call(thisp || arr, arr[i], i, arr);\n    }\n  }\n}\n\nvar isEmpty = function( obj ) {\n  for ( var key in obj ) {\n    if ( hasOwnProperty.call( obj, key ) ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction extract_attr( jsonml ) {\n  return isArray(jsonml)\n      && jsonml.length > 1\n      && typeof jsonml[ 1 ] === \"object\"\n      && !( isArray(jsonml[ 1 ]) )\n      ? jsonml[ 1 ]\n      : undefined;\n}\n\n\n\n/**\n *  renderJsonML( jsonml[, options] ) -> String\n *  - jsonml (Array): JsonML array to render to XML\n *  - options (Object): options\n *\n *  Converts the given JsonML into well-formed XML.\n *\n *  The options currently understood are:\n *\n *  - root (Boolean): wether or not the root node should be included in the\n *    output, or just its children. The default `false` is to not include the\n *    root itself.\n */\nexpose.renderJsonML = function( jsonml, options ) {\n  options = options || {};\n  // include the root element in the rendered output?\n  options.root = options.root || false;\n\n  var content = [];\n\n  if ( options.root ) {\n    content.push( render_tree( jsonml ) );\n  }\n  else {\n    jsonml.shift(); // get rid of the tag\n    if ( jsonml.length && typeof jsonml[ 0 ] === \"object\" && !( jsonml[ 0 ] instanceof Array ) ) {\n      jsonml.shift(); // get rid of the attributes\n    }\n\n    while ( jsonml.length ) {\n      content.push( render_tree( jsonml.shift() ) );\n    }\n  }\n\n  return content.join( \"\\n\\n\" );\n};\n\nfunction escapeHTML( text ) {\n  return text.replace( /&/g, \"&amp;\" )\n             .replace( /</g, \"&lt;\" )\n             .replace( />/g, \"&gt;\" )\n             .replace( /\"/g, \"&quot;\" )\n             .replace( /'/g, \"&#39;\" );\n}\n\nfunction render_tree( jsonml ) {\n  // basic case\n  if ( typeof jsonml === \"string\" ) {\n    return escapeHTML( jsonml );\n  }\n\n  var tag = jsonml.shift(),\n      attributes = {},\n      content = [];\n\n  if ( jsonml.length && typeof jsonml[ 0 ] === \"object\" && !( jsonml[ 0 ] instanceof Array ) ) {\n    attributes = jsonml.shift();\n  }\n\n  while ( jsonml.length ) {\n    content.push( render_tree( jsonml.shift() ) );\n  }\n\n  var tag_attrs = \"\";\n  for ( var a in attributes ) {\n    tag_attrs += \" \" + a + '=\"' + escapeHTML( attributes[ a ] ) + '\"';\n  }\n\n  // be careful about adding whitespace here for inline elements\n  if ( tag == \"img\" || tag == \"br\" || tag == \"hr\" ) {\n    return \"<\"+ tag + tag_attrs + \"/>\";\n  }\n  else {\n    return \"<\"+ tag + tag_attrs + \">\" + content.join( \"\" ) + \"</\" + tag + \">\";\n  }\n}\n\nfunction convert_tree_to_html( tree, references, options ) {\n  var i;\n  options = options || {};\n\n  // shallow clone\n  var jsonml = tree.slice( 0 );\n\n  if ( typeof options.preprocessTreeNode === \"function\" ) {\n      jsonml = options.preprocessTreeNode(jsonml, references);\n  }\n\n  // Clone attributes if they exist\n  var attrs = extract_attr( jsonml );\n  if ( attrs ) {\n    jsonml[ 1 ] = {};\n    for ( i in attrs ) {\n      jsonml[ 1 ][ i ] = attrs[ i ];\n    }\n    attrs = jsonml[ 1 ];\n  }\n\n  // basic case\n  if ( typeof jsonml === \"string\" ) {\n    return jsonml;\n  }\n\n  // convert this node\n  switch ( jsonml[ 0 ] ) {\n    case \"header\":\n      jsonml[ 0 ] = \"h\" + jsonml[ 1 ].level;\n      delete jsonml[ 1 ].level;\n      break;\n    case \"bulletlist\":\n      jsonml[ 0 ] = \"ul\";\n      break;\n    case \"numberlist\":\n      jsonml[ 0 ] = \"ol\";\n      break;\n    case \"listitem\":\n      jsonml[ 0 ] = \"li\";\n      break;\n    case \"para\":\n      jsonml[ 0 ] = \"p\";\n      break;\n    case \"markdown\":\n      jsonml[ 0 ] = \"html\";\n      if ( attrs ) delete attrs.references;\n      break;\n    case \"code_block\":\n      jsonml[ 0 ] = \"pre\";\n      i = attrs ? 2 : 1;\n      var code = [ \"code\" ];\n      code.push.apply( code, jsonml.splice( i, jsonml.length - i ) );\n      jsonml[ i ] = code;\n      break;\n    case \"inlinecode\":\n      jsonml[ 0 ] = \"code\";\n      break;\n    case \"img\":\n      jsonml[ 1 ].src = jsonml[ 1 ].href;\n      delete jsonml[ 1 ].href;\n      break;\n    case \"linebreak\":\n      jsonml[ 0 ] = \"br\";\n    break;\n    case \"link\":\n      jsonml[ 0 ] = \"a\";\n      break;\n    case \"link_ref\":\n      jsonml[ 0 ] = \"a\";\n\n      // grab this ref and clean up the attribute node\n      var ref = references[ attrs.ref ];\n\n      // if the reference exists, make the link\n      if ( ref ) {\n        delete attrs.ref;\n\n        // add in the href and title, if present\n        attrs.href = ref.href;\n        if ( ref.title ) {\n          attrs.title = ref.title;\n        }\n\n        // get rid of the unneeded original text\n        delete attrs.original;\n      }\n      // the reference doesn't exist, so revert to plain text\n      else {\n        return attrs.original;\n      }\n      break;\n    case \"img_ref\":\n      jsonml[ 0 ] = \"img\";\n\n      // grab this ref and clean up the attribute node\n      var ref = references[ attrs.ref ];\n\n      // if the reference exists, make the link\n      if ( ref ) {\n        delete attrs.ref;\n\n        // add in the href and title, if present\n        attrs.src = ref.href;\n        if ( ref.title ) {\n          attrs.title = ref.title;\n        }\n\n        // get rid of the unneeded original text\n        delete attrs.original;\n      }\n      // the reference doesn't exist, so revert to plain text\n      else {\n        return attrs.original;\n      }\n      break;\n  }\n\n  // convert all the children\n  i = 1;\n\n  // deal with the attribute node, if it exists\n  if ( attrs ) {\n    // if there are keys, skip over it\n    for ( var key in jsonml[ 1 ] ) {\n        i = 2;\n        break;\n    }\n    // if there aren't, remove it\n    if ( i === 1 ) {\n      jsonml.splice( i, 1 );\n    }\n  }\n\n  for ( ; i < jsonml.length; ++i ) {\n    jsonml[ i ] = convert_tree_to_html( jsonml[ i ], references, options );\n  }\n\n  return jsonml;\n}\n\n\n// merges adjacent text nodes into a single node\nfunction merge_text_nodes( jsonml ) {\n  // skip the tag name and attribute hash\n  var i = extract_attr( jsonml ) ? 2 : 1;\n\n  while ( i < jsonml.length ) {\n    // if it's a string check the next item too\n    if ( typeof jsonml[ i ] === \"string\" ) {\n      if ( i + 1 < jsonml.length && typeof jsonml[ i + 1 ] === \"string\" ) {\n        // merge the second string into the first and remove it\n        jsonml[ i ] += jsonml.splice( i + 1, 1 )[ 0 ];\n      }\n      else {\n        ++i;\n      }\n    }\n    // if it's not a string recurse\n    else {\n      merge_text_nodes( jsonml[ i ] );\n      ++i;\n    }\n  }\n}\n\n} )( (function() {\n  if ( typeof exports === \"undefined\" ) {\n    window.markdown = {};\n    return window.markdown;\n  }\n  else {\n    return exports;\n  }\n} )() );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/markdown/lib/markdown.js\n// module id = xZWZ\n// module chunks = 2"],"sourceRoot":""}